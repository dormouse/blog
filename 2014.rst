======================================
Install wordpress on LinuxMint(Ubuntu)
======================================

2014年 10月 26日 星期日 19:45:34 CST

#. install softwares::

    sudo apt-get install wordpress mysql-server phpmyadmin

#. make links::

    sudo ln -s /usr/share/wordpress/ /var/www/wp
    sudo ln -s /usr/share/phpmyadmin/ /var/www/phpmyadmin

#. restart services::

    sudo service apache2 restart
    sudo service mysql restart

#. 在phpmyadmin中创建wordpress专用用户

#. config wordpress::

    cd /usr/share/wordpress
    mv wp-config.php wp-config.php.bak
    修改wp-config-sample.php 中的用户名和密码，另存为wp-config.php

#. add administrator

  open http://127.0.0.1/wp/ ,set user name and password of wordpress's admin.

============
pelican note
============

:date: 2015-03-10 13:55:57
:modified: 2015-03-10 13:55:57
:tags: pelican, blog
:category: write
:author: Dormouse Young
:summary: How to build a pelican from scratch?

Install software::

    mkdir pelican_blog
    cd pelican_blog
    mkvirtualenv pelican_blog
    pip install pelican markdown

Start pelican setup::

    pelican-quickstart

You will see blow::

    Welcome to pelican-quickstart v3.5.0.

    This script will help you create a new Pelican-based website.

    Please answer the following questions so this script can generate the files
    needed by Pelican.

        
    > Where do you want to create your new web site? [.] 
    > What will be the title of this web site? Dormouse Hole
    > Who will be the author of this web site? Dormouse.Young
    > What will be the default language of this web site? [en] zh
    > Do you want to specify a URL prefix? e.g., http://example.com   (Y/n) 
    > What is your URL prefix? (see above example; no trailing slash) http://http://dormouse.github.io
    > Do you want to enable article pagination? (Y/n) 
    > How many articles per page do you want? [10] 
    > Do you want to generate a Fabfile/Makefile to automate generation and publishing? (Y/n) 
    > Do you want an auto-reload & simpleHTTP script to assist with theme and site development? (Y/n) 
    > Do you want to upload your website using FTP? (y/N) 
    > Do you want to upload your website using SSH? (y/N) 
    > Do you want to upload your website using Dropbox? (y/N) 
    > Do you want to upload your website using S3? (y/N) 
    > Do you want to upload your website using Rackspace Cloud Files? (y/N) 
    > Do you want to upload your website using GitHub Pages? (y/N) y
    > Is this your personal page (username.github.io)? (y/N) y
    Done. Your new project is available at /home/dormouse/project/pelican_blog

Now we have::

    content            fabfile.py  output          publishconf.py
    develop_server.sh  Makefile    pelicanconf.py

get plugins::

    git clone git://github.com/getpelican/pelican-plugins.git

get all themes::

    git clone --recursive git://github.com/getpelican/pelican-themes ./pelican-themes

Edit pelicanconf.py like following:

.. code-block:: python

    #!/usr/bin/env python
    # -*- coding: utf-8 -*- #
    from __future__ import unicode_literals

    AUTHOR = u'Dormouse.Young'
    AUTHOR_EMAIL = u'dormouse.young@gmail.com'
    SITENAME = u'Dormouse Hole'
    SITEURL = 'https://dormouse.github.io'
    TAGLINE = 'Simple is better.'
    PATH = 'content'
    TIMEZONE = 'Asia/Shanghai'
    DEFAULT_LANG = u'zh'
    DEFAULT_DATE_FORMAT = ('%Y-%m-%d')

    # Feed generation is usually not desired when developing
    FEED_ALL_ATOM = None
    CATEGORY_FEED_ATOM = None
    TRANSLATION_FEED_ATOM = None
    AUTHOR_FEED_ATOM = None
    AUTHOR_FEED_RSS = None
    DEFAULT_PAGINATION = 10

    # Blogroll
    LINKS = (('Pelican', 'http://getpelican.com/'),
             ('Python.org', 'http://python.org/'),
             ('Jinja2', 'http://jinja.pocoo.org/'),
            )

    # Social widget
    SOCIAL = (('Github', 'https://github.com/dormouse'),
            )

    # Uncomment following line if you want document-relative URLs when developing
    RELATIVE_URLS = True

    # Theme
    THEME = 'pelican-themes/voidy-bootstrap'
    SITESUBTITLE ='Simple is better.'
    STYLESHEET_FILES = ("pygment.css", "voidybootstrap.css",)
    CUSTOM_ARTICLE_FOOTERS = ("taglist.html", "sharing.html", )
    CUSTOM_SCRIPTS_ARTICLE = "sharing_scripts.html"
    SIDEBAR = "sidebar.html"

    DISQUS_SITENAME = "dormouseyoung"


Edit publishconf.py like following:

.. code-block:: python

    #!/usr/bin/env python
    # -*- coding: utf-8 -*- #
    from __future__ import unicode_literals

    # This file is only used if you use `make publish` or
    # explicitly specify it as your config file.

    import os
    import sys
    sys.path.append(os.curdir)
    from pelicanconf import *

    SITEURL = 'https://dormouse.github.io'
    RELATIVE_URLS = False

    FEED_ALL_ATOM = 'feeds/all.atom.xml'
    CATEGORY_FEED_ATOM = 'feeds/%s.atom.xml'

    DELETE_OUTPUT_DIRECTORY = True

    # Following items are often useful when publishing

    DISQUS_SITENAME = "dormouseyoung"
    #GOOGLE_ANALYTICS = ""

Start first article::

    cd content
    mkdir articles files images pages
    vim articles/hello.md

Start develop server to preview local html::

    make devserver

参考资料：

* `Configuring Pelican Static Blog <http://pbpython.com/pelican-config.html>`_
* `使用Pelican + Markdown + GitHub Pages来撰写Blog <http://www.tuicool.com/articles/INjiui>`_



==============================
github.io 丢失下划线开头的文件
==============================

2014年 10月 18日 星期六 21:58:29 CST

近来开始在 github.io 上写 blog ,但是发现 github 不支持下划线开头的目录。
于是写 Email 向 github 求助，很快就得到回复。原来是 Jekyll （亦或是 ruby?) 的
问题。 Jekyll 不支持点号、井号或下划线开头的东东。

* 解决方法：

 在根目录加入一个 .nojekyll 文件，来关闭 Jekyll 。 

* 参考：

 `files-that-start-with-an-underscore-are-missing
 <https://help.github.com/articles/files-that-start-with-an-underscore-are-missing/>`_

======================
Linux Mint 17 安装笔记
======================

2014年 10月 16日 星期四 20:31:00 CST

install cloudstation
====================

* download cloudstation
* uncompress
* ./install

setup software source 
=====================
select the fastest software source

install some software
=====================

* install following software::

    sudo apt-get install build-essential python-dev 
    sudo apt-get install fcitx fcitx-ui-classic fcitx-table-wbpy
    sudo apt-get install git vim-gnome ctags keepassx filezilla

* software setup

    * sync firefox

    * setup git, see :ref:`setup_git`.

install virtualenv
==================

* install pip and virtualenvwrapper::

    sudo apt-get install python-pip
    sudo pip install virtualenvwrapper

* add flowing to ~/.bashrc::

    export WORKON_HOME=$HOME/.virtualenvs
    export PROJECT_HOME=$HOME/project
    source /usr/local/bin/virtualenvwrapper.sh
    reload .bashrc


install XBMC
============

输入如下命令安装（适用于 Ubuntu 9.10 Karmic 或更高版本，详见：
`Install_XBMC_on_Ubuntu/HOW-TO
<http://wiki.xbmc.org/index.php?title=HOW-TO:Install_XBMC_on_Ubuntu/HOW-TO_1>`_
）::

    sudo apt-get install python-software-properties pkg-config
    sudo add-apt-repository ppa:team-xbmc
    sudo apt-get update
    sudo apt-get install xbmc xbmc-standalone

安装完以后要设置字体：进入 XBMC，菜单 System -> Appearance -> Skin -> Fonts ->
选择 Arial based 。


